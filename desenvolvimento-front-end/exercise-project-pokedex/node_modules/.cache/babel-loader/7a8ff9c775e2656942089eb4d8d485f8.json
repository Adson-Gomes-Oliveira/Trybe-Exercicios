{"ast":null,"code":"const DECIMETER_MULTIPLIER = 10;\nconst HECTOGRAMS_MULTIPLIER = 100;\nconst KILOGRAMS_DIVISOR = 100;\nconst POKEMONS_PAGE_LIMIT = 19;\n\nconst fetchPokemon = async pokemonName => {\n  const requestPokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`);\n  const requestPokemonObject = await requestPokemon.json();\n  const {\n    name,\n    sprites: {\n      front_default\n    },\n    height,\n    weight,\n    stats,\n    types,\n    id\n  } = await requestPokemonObject;\n  const pokemonProfile = {\n    id: id,\n    name: name,\n    image: front_default,\n    height: height * DECIMETER_MULTIPLIER,\n    weight: HECTOGRAMS_MULTIPLIER * weight / KILOGRAMS_DIVISOR,\n    types: types.map(type => type.type.name),\n    stats: {\n      hp: stats.find(stat => stat.stat.name === 'hp').base_stat,\n      attack: stats.find(stat => stat.stat.name === 'attack').base_stat,\n      defense: stats.find(stat => stat.stat.name === 'defense').base_stat,\n      special_attack: stats.find(stat => stat.stat.name === 'special-attack').base_stat,\n      special_defense: stats.find(stat => stat.stat.name === 'special-defense').base_stat,\n      speed: stats.find(stat => stat.stat.name === 'speed').base_stat\n    }\n  };\n  return pokemonProfile;\n};\n\nexport const fetchAllPokemons = async () => {\n  const requestAllPokemons = await fetch('https://pokeapi.co/api/v2/pokemon/');\n  const allPokemonsObjectRequest = await requestAllPokemons.json();\n  const pokemonsObjectList = await allPokemonsObjectRequest.results;\n  await pokemonsObjectList.forEach(poke => {\n    const {\n      name\n    } = poke;\n    fetchPokemon(name);\n  });\n};","map":{"version":3,"sources":["/home/adson/Repositorios-Trybe/trybe-exercicios/desenvolvimento-front-end/exercise-project-pokedex/src/services/pokemonAPI.jsx"],"names":["DECIMETER_MULTIPLIER","HECTOGRAMS_MULTIPLIER","KILOGRAMS_DIVISOR","POKEMONS_PAGE_LIMIT","fetchPokemon","pokemonName","requestPokemon","fetch","requestPokemonObject","json","name","sprites","front_default","height","weight","stats","types","id","pokemonProfile","image","map","type","hp","find","stat","base_stat","attack","defense","special_attack","special_defense","speed","fetchAllPokemons","requestAllPokemons","allPokemonsObjectRequest","pokemonsObjectList","results","forEach","poke"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,EAA7B;AACA,MAAMC,qBAAqB,GAAG,GAA9B;AACA,MAAMC,iBAAiB,GAAG,GAA1B;AACA,MAAMC,mBAAmB,GAAG,EAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAOC,WAAP,IAAuB;AAC1C,QAAMC,cAAc,GAAG,MAAMC,KAAK,CAAE,qCAAoCF,WAAY,EAAlD,CAAlC;AACA,QAAMG,oBAAoB,GAAG,MAAMF,cAAc,CAACG,IAAf,EAAnC;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF,KAAjB;AAAoCC,IAAAA,MAApC;AAA4CC,IAAAA,MAA5C;AAAoDC,IAAAA,KAApD;AAA2DC,IAAAA,KAA3D;AAAkEC,IAAAA;AAAlE,MAAyE,MAAMT,oBAArF;AACA,QAAMU,cAAc,GAAG;AACrBD,IAAAA,EAAE,EAAEA,EADiB;AAErBP,IAAAA,IAAI,EAAEA,IAFe;AAGrBS,IAAAA,KAAK,EAAEP,aAHc;AAIrBC,IAAAA,MAAM,EAAEA,MAAM,GAAGb,oBAJI;AAKrBc,IAAAA,MAAM,EAAGb,qBAAqB,GAAGa,MAAzB,GAAmCZ,iBALtB;AAMrBc,IAAAA,KAAK,EAAEA,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACA,IAAL,CAAUX,IAA9B,CANc;AAOrBK,IAAAA,KAAK,EAAE;AACLO,MAAAA,EAAE,EAAEP,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACA,IAAL,CAAUd,IAAV,KAAmB,IAAxC,EAA8Ce,SAD7C;AAELC,MAAAA,MAAM,EAAEX,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACA,IAAL,CAAUd,IAAV,KAAmB,QAAxC,EAAkDe,SAFrD;AAGLE,MAAAA,OAAO,EAAEZ,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACA,IAAL,CAAUd,IAAV,KAAmB,SAAxC,EAAmDe,SAHvD;AAILG,MAAAA,cAAc,EAAEb,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACA,IAAL,CAAUd,IAAV,KAAmB,gBAAxC,EAA0De,SAJrE;AAKLI,MAAAA,eAAe,EAAEd,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACA,IAAL,CAAUd,IAAV,KAAmB,iBAAxC,EAA2De,SALvE;AAMLK,MAAAA,KAAK,EAAEf,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACA,IAAL,CAAUd,IAAV,KAAmB,OAAxC,EAAiDe;AANnD;AAPc,GAAvB;AAgBA,SAAOP,cAAP;AACD,CArBD;;AAuBA,OAAO,MAAMa,gBAAgB,GAAG,YAAY;AAC1C,QAAMC,kBAAkB,GAAG,MAAMzB,KAAK,CAAC,oCAAD,CAAtC;AACA,QAAM0B,wBAAwB,GAAG,MAAMD,kBAAkB,CAACvB,IAAnB,EAAvC;AACA,QAAMyB,kBAAkB,GAAG,MAAMD,wBAAwB,CAACE,OAA1D;AACA,QAAMD,kBAAkB,CAACE,OAAnB,CAA4BC,IAAD,IAAU;AACzC,UAAM;AAAE3B,MAAAA;AAAF,QAAW2B,IAAjB;AACAjC,IAAAA,YAAY,CAACM,IAAD,CAAZ;AACD,GAHK,CAAN;AAID,CARM","sourcesContent":["const DECIMETER_MULTIPLIER = 10;\nconst HECTOGRAMS_MULTIPLIER = 100;\nconst KILOGRAMS_DIVISOR = 100;\nconst POKEMONS_PAGE_LIMIT = 19;\n\nconst fetchPokemon = async (pokemonName) => {\n  const requestPokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`);\n  const requestPokemonObject = await requestPokemon.json();\n  const { name, sprites: { front_default }, height, weight, stats, types, id } = await requestPokemonObject;\n  const pokemonProfile = {\n    id: id,\n    name: name,\n    image: front_default,\n    height: height * DECIMETER_MULTIPLIER, \n    weight: (HECTOGRAMS_MULTIPLIER * weight) / KILOGRAMS_DIVISOR,\n    types: types.map((type) => type.type.name),\n    stats: {\n      hp: stats.find((stat) => stat.stat.name === 'hp').base_stat,\n      attack: stats.find((stat) => stat.stat.name === 'attack').base_stat,\n      defense: stats.find((stat) => stat.stat.name === 'defense').base_stat,\n      special_attack: stats.find((stat) => stat.stat.name === 'special-attack').base_stat,\n      special_defense: stats.find((stat) => stat.stat.name === 'special-defense').base_stat,\n      speed: stats.find((stat) => stat.stat.name === 'speed').base_stat,\n    },\n  }\n  return pokemonProfile;\n}\n\nexport const fetchAllPokemons = async () => {\n  const requestAllPokemons = await fetch('https://pokeapi.co/api/v2/pokemon/');\n  const allPokemonsObjectRequest = await requestAllPokemons.json();\n  const pokemonsObjectList = await allPokemonsObjectRequest.results;\n  await pokemonsObjectList.forEach((poke) => {\n    const { name } = poke;\n    fetchPokemon(name);\n  })\n}"]},"metadata":{},"sourceType":"module"}